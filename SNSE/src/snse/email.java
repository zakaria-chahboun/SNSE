package snse;

import java.awt.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Address;
import javax.mail.Header;
import javax.mail.Message;
import javax.mail.MessagingException;
import snse.Mail_Box;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * accueil.java
 *
 * Created on Dec 14, 2011, 3:50:16 PM
 */
/**
 *
 * @author user
 */
public class email extends javax.swing.JFrame {

    boolean folfol = true;
    javax.swing.Timer t;

    /** Creates new form accueil */
    public email() {
        initComponents();
        this.setLocation(300, 150);
        t = new javax.swing.Timer(120000, new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                Mail_Box.autochek_email();
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        passwor = new javax.swing.JPasswordField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Système de notification et synchronisation des évènements");
        setFocusCycleRoot(false);
        setMinimumSize(new java.awt.Dimension(658, 513));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        logi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                logiKeyReleased(evt);
            }
        });
        getContentPane().add(logi);
        logi.setBounds(210, 160, 220, 30);

        jLabel3.setFont(new java.awt.Font("Footlight MT Light", 0, 18));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("password :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(110, 210, 110, 30);

        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel2MouseExited(evt);
            }
        });
        getContentPane().add(jLabel2);
        jLabel2.setBounds(220, 320, 110, 40);

        jLabel4.setFont(new java.awt.Font("Footlight MT Light", 0, 18));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Login :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(110, 160, 110, 30);

        jLabel5.setFont(new java.awt.Font("Footlight MT Light", 0, 24));
        jLabel5.setText("Zakaria Ouhrochan &  Fatimzahra GHazali");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(110, 420, 430, 40);

        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel6);
        jLabel6.setBounds(500, 350, 30, 30);
        getContentPane().add(passwor);
        passwor.setBounds(210, 210, 220, 30);

        jCheckBox1.setBackground(new java.awt.Color(51, 51, 255));
        jCheckBox1.setText("Se Souvenir de Moi?");
        getContentPane().add(jCheckBox1);
        jCheckBox1.setBounds(130, 280, 140, 20);
        getContentPane().add(jLabel7);
        jLabel7.setBounds(160, 280, 110, 0);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bypiratxx1gg.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 640, 480);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    ArrayList<String> arr = Enregitrer.Deserialisation();
    if (arr.size() == 2) {
        logi.setText(arr.get(0));
        passwor.setText(arr.get(1));
        jCheckBox1.setSelected(true);
    }

}//GEN-LAST:event_formWindowOpened

private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
    if (folfol) {
        if (jCheckBox1.isSelected()) {

            Enregitrer.serialisation(logi.getText(), passwor.getText());
        } else {
            Enregitrer.suppression_de_donnee();
        }

        Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize();// size of the screen
        Insets toolHeight = Toolkit.getDefaultToolkit().getScreenInsets(this.getGraphicsConfiguration());// height of the task bar

//    System.out.print( "size"+(scrSize.height - toolHeight.bottom - this.getHeight()));



        String log = "";
        log = logi.getText();

        String pass = "";
        pass = passwor.getText();

        if (Mail_Box.connection(log, pass)) {

            this.setVisible(false);

            if (Mail_Box.check_email()) {
                Message[] messages = Mail_Box.alert_mail();
                int notip = (messages.length - Mail_Box.nbr_message_lu_or_inde(messages)) * 100;
                for (int i = 0; i < messages.length; i++) {
                    Message m = messages[i];
                    String ID_mail = null;
                    //--------------------recupiration de l'Id d'un mail-----------------------------------------------------------------------
                    try {



                        Enumeration headers = m.getAllHeaders();
                        while (headers.hasMoreElements()) {
                            Header h = (Header) headers.nextElement();

                            if (h.getName().equals("Message-ID")) {
                                ID_mail = h.getValue();
                            }
                        }



                    } catch (Exception e) {
                    }

                    //------------------------recuperation de l'expiditeur-------------------------------------------------------------------           
                    String mailind = null;
                    Address[] addd;
                    try {
                        if ((addd = m.getFrom()) != null) {
                            for (int j = 0; j < addd.length; j++) {
                                mailind = addd[j].toString();
                            }
                        }
                    } catch (MessagingException ex) {
                        Logger.getLogger(Notification.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    //-------------------------------------------------------------------------------------------  
                    ArrayList<String> MailInd = Enregitrer.Dser_MailInd();

                    if (!MailInd.contains(mailind)) {

                        ArrayList<String> arry = Enregitrer.Dser_MailLu();
                        if (!arry.contains(ID_mail)) {
                            Address[] a;
                            try {
                                if ((a = m.getFrom()) != null) {
                                    for (int j = 0; j < a.length; j++) {
                                        notip = (notip - 100);
                                        int notipo = notip;
//                %(scrSize.height - toolHeight.bottom - this.getHeight());
                                        final Notification n = new Notification(notipo);
                                        n.M = m;

                                        Date d = m.getReceivedDate();
//              System.out.println("date de receprion"+d);
                                        n.jLabel4.setText(m.getSubject());
                                        n.jLabel3.setText(a[j].toString());


//           System.out.println(n.notipos);

                                        n.setVisible(true);
                                        new Thread() {

                                            @Override
                                            public void run() {
                                                try {
                                                    Thread.sleep(50000); // time after which pop up will be disappeared.
                                                    n.dispose();
                                                } catch (InterruptedException e) {
                                                    e.printStackTrace();
                                                }
                                            }
                                        ;
                                    }
                                
                             .start();  
      
            }
                
                 } } catch (MessagingException ex) {
                                Logger.getLogger(Mail_Box.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        } else {
                            notip = notip - 100;
                        }
                    } else {
                        notip = notip - 100;
                    }


                }


            }


        } else {
            javax.swing.JOptionPane.showMessageDialog(null, "Le nom d'utilisateur ou le mot de passe saisi est incorrect");
        }
    } else {
        javax.swing.JOptionPane.showMessageDialog(null, "Email non valide");
    }


    t.start();



}//GEN-LAST:event_jLabel2MouseClicked

private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered
    jLabel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
}//GEN-LAST:event_jLabel2MouseEntered

private void jLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseExited
    jLabel2.setBorder(null);
}//GEN-LAST:event_jLabel2MouseExited

private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
    this.setVisible(false);
}//GEN-LAST:event_jLabel6MouseClicked

private void logiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_logiKeyReleased

    String emaill = logi.getText();
    boolean t1 = (emaill.indexOf(';') < 0);
    boolean t2 = (emaill.indexOf('@') > 0);

    if (t1 && t2) {
        folfol = true;
        jLabel2.setText("");
    } else {
        folfol = false;
    }
    // TODO add your handling code here:
}//GEN-LAST:event_logiKeyReleased

private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
}//GEN-LAST:event_formWindowClosed

private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
}//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(email.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(email.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(email.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(email.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new email().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField logi;
    private javax.swing.JPasswordField passwor;
    // End of variables declaration//GEN-END:variables
}
